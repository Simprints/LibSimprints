import com.vanniktech.maven.publish.AndroidSingleVariantLibrary

buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:8.12.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:2.0.20"
        classpath "com.vanniktech.maven.publish:com.vanniktech.maven.publish.gradle.plugin:0.34.0"
    }
}

apply plugin: "com.android.library"
apply plugin: "org.jetbrains.kotlin.android"

repositories {
    google()
    mavenCentral()
}

project.version = "2025.2.1"
ext {
    VERSION_CODE = 202502001
}

android {
    namespace = "com.simprints.libsimprints"
    compileSdk = 36

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 36

        versionName project.version
        // Version code should match the name as it is used in SID
        // to determine the most appropriate response data format
        versionCode project.property("VERSION_CODE")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    buildFeatures {
        buildConfig true
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"

            buildConfigField("Integer", "LIBRARY_VERSION_CODE", "${project.property("VERSION_CODE")}")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            buildConfigField("String", "LIBRARY_PACKAGE_VERSION", "\"${project.version}\"")
            buildConfigField("Integer", "LIBRARY_VERSION_CODE", "${project.property("VERSION_CODE")}")
        }
        staging {
            initWith release
        }
        endToEndTesting {
            initWith debug
            testCoverageEnabled false
        }
        profiling {
            initWith debug
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:2.0.20"
    implementation 'androidx.activity:activity-ktx:1.10.1'

    testImplementation "junit:junit:4.13.2"
    testImplementation "androidx.test.ext:junit:1.3.0"
    testImplementation "androidx.test:core:1.7.0"
    testImplementation "org.robolectric:robolectric:4.16"
}

apply from: ".github/publish/publishConfig.gradle"

// Has to be in main build file since due to importing issues
apply plugin: 'com.vanniktech.maven.publish'
apply plugin: 'signing'

mavenPublishing {
    configure(new AndroidSingleVariantLibrary("release", true, true))
    coordinates(publishedGroupId, artifact, libraryVersion)
    pom {
        name = artifact
        description = libraryDescription
        url = siteUrl
        licenses {
            license {
                name = licenseName
                url = licenseUrl
            }
        }
        developers {
            developer {
                id = developerId
                name = developerName
                email = developerEmail
            }
        }
        scm {
            connection = gitUrl
            developerConnection = gitUrl
            url = siteUrl
        }
    }

    // Publish to Central via the new Portal API, and auto-release if validation passes
    publishToMavenCentral(true)
    signAllPublications()
}

signing {
    sign publishing.publications
}
